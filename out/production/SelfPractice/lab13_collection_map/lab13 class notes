Java Programming Lab13

package name: lab13_collection_map

Review Topics: Collection
			   Map

Data Structures: to use data efficiently.

		1. Array
		2. Collection
		3. Map

		Containers of Data

Array vs Collection vs Map

		1. Array: Size is fixed
				  Supports both primitive & non primitive data types
				  Can be multi-dimensional

				Faster (random access)


		2. Collection: Size is dynamic
					   Supports non-primitive data types ONLY
					   Can NOT be multi-dimensional
					   Collection of individual objects
					   Ready methods

			    2.1 List: Allow Duplicates, HAS index

			    		2.1.1 ArrayList: Array Based Class

			    		2.1.2 LinkedList: Node Based Class (doubly linked list)

			    		2.1.3 Vector: Array Based Class, synchronized

			    			2.1.3.1 Stack: Array Based Class, synchronized. LIFO


			    2.2 Set: Does not allow duplicates, Does NOT have INDEX.

			    		2.2.1 HashSet: Random order

			    			2.2.1.1 LinkedHashSet: Insertion order

			    		2.2.2 TreeSet: Sorted order, does not accept null


			    2.3 Queue: Allow Duplicates, Does NOT have INDEX. FIFO

			    		2.3.1 PriorityQueue: Random order

			    		2.3.2 ArrayDequeue: Insertion order

			    		2.3.3 LinkedList: Insertion order, Has index, accepts null




		3. Map: Size is dynamic
				Supports non-primitive data types ONLY
				Can NOT be multi-dimensional
				Collection of pairs (key & value)
				Ready methods

				KEY MUST BE UNIQUE

				3.1 HashMap: Random order

					3.1.1 LinkedHashMap: Insertion order

				3.2 TreeMap: Sorted order, key can not be null

				3.3 Hashtable: Random order, synchronized. BOTH KEY and VALUE can NOT be null

https://media.discordapp.net/attachments/968921955682107432/999697257341403198/0_oJ-m6qVSVr-ew6mr.jpeg?width=760&height=532









Next topics:
	enum
	generics
	lambda
	function interface
	stream
	...





